// Admin Panel JavaScript
(function() {
    'use strict';

    // Sidebar toggle functionality
    const sidebarToggle = document.querySelector('.sidebar-toggle');
    const sidebar = document.querySelector('.sidebar');

    if (sidebarToggle && sidebar) {
        sidebarToggle.addEventListener('click', function() {
            sidebar.classList.toggle('collapsed');
        });
    }

    // Auto-hide alerts after 5 seconds
    const alerts = document.querySelectorAll('.alert');
    alerts.forEach(function(alert) {
        setTimeout(function() {
            if (alert && alert.classList.contains('show')) {
                alert.classList.remove('show');
                setTimeout(function() {
                    if (alert.parentNode) {
                        alert.parentNode.removeChild(alert);
                    }
                }, 150);
            }
        }, 5000);
    });

    // Initialize TinyMCE for content areas
    if (typeof tinymce !== 'undefined') {
        tinymce.init({
            selector: '.rich-text-editor',
            height: 400,
            plugins: [
                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap',
                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',
                'insertdatetime', 'media', 'table', 'help', 'wordcount'
            ],
            toolbar: 'undo redo | blocks | bold italic forecolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
            content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; }',
            language: 'tr',
            setup: function(editor) {
                editor.on('change', function() {
                    editor.save();
                });
            }
        });
    }

    // Auto-generate slug from title
    const titleInput = document.getElementById('Title');
    const slugInput = document.getElementById('Slug');

    if (titleInput && slugInput) {
        titleInput.addEventListener('input', function() {
            if (slugInput.value === '' || slugInput.dataset.autoGenerated === 'true') {
                const slug = generateSlug(this.value);
                slugInput.value = slug;
                slugInput.dataset.autoGenerated = 'true';
            }
        });

        slugInput.addEventListener('input', function() {
            this.dataset.autoGenerated = 'false';
        });
    }

    // Slug generation function
    function generateSlug(text) {
        const turkishChars = {
            'ç': 'c',
            'Ç': 'C',
            'ğ': 'g',
            'Ğ': 'G',
            'ı': 'i',
            'İ': 'I',
            'ö': 'o',
            'Ö': 'O',
            'ş': 's',
            'Ş': 'S',
            'ü': 'u',
            'Ü': 'U'
        };

        let slug = text.toLowerCase();

        // Replace Turkish characters
        for (const [key, value] of Object.entries(turkishChars)) {
            slug = slug.replaceAll(key, value);
        }

        // Replace spaces and special characters with dashes
        slug = slug.replace(/[^a-z0-9\-]/g, '-');
        slug = slug.replace(/-+/g, '-');
        slug = slug.replace(/^-+|-+$/g, '');

        return slug;
    }

    // Confirm delete operations
    const deleteButtons = document.querySelectorAll('[data-confirm-delete]');
    deleteButtons.forEach(function(button) {
        button.addEventListener('click', function(e) {
            if (!confirm('Bu öğeyi silmek istediğinizden emin misiniz?')) {
                e.preventDefault();
                return false;
            }
        });
    });

    // File upload preview
    const fileInputs = document.querySelectorAll('input[type="file"]');
    fileInputs.forEach(function(input) {
        input.addEventListener('change', function() {
            const file = this.files[0];
            const preview = document.querySelector(`#${this.id}-preview`);

            if (file && preview) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });
    });

    // Active navigation highlighting
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.sidebar-menu .nav-link');

    navLinks.forEach(function(link) {
        const href = link.getAttribute('href');
        if (href && currentPath.includes(href)) {
            link.classList.add('active');
        }
    });

    // Link fixer for missing area prefix
    document.addEventListener('DOMContentLoaded', function() {
        // Fix admin area links if they're broken
        if (window.location.pathname.includes('/Admin/')) {
            const allLinks = document.querySelectorAll('a[href]');
            allLinks.forEach(function(link) {
                const href = link.getAttribute('href');
                // Sadece göreceli linkleri düzelt ve zaten düzgün olanları atla
                if (href && !href.startsWith('/') && !href.startsWith('http') && !href.startsWith('#')) {
                    // Admin area için link ise, /Admin/ ekle
                    if (!href.includes('/Admin/')) {
                        link.setAttribute('href', '/Admin/' + href);
                        console.log('Link düzeltildi:', href, ' => ', '/Admin/' + href);
                    }
                }
            });
        }
    });

    // Mobile sidebar toggle
    const mobileToggle = document.querySelector('[data-mobile-sidebar-toggle]');
    if (mobileToggle) {
        mobileToggle.addEventListener('click', function() {
            sidebar.classList.toggle('show');
        });
    }

    // Close mobile sidebar when clicking outside
    document.addEventListener('click', function(e) {
        if (window.innerWidth <= 768) {
            if (!sidebar.contains(e.target) && !e.target.closest('.sidebar-toggle')) {
                sidebar.classList.remove('show');
            }
        }
    });

})();